use mips_weaver::{
    config::Config,
    instruction::Instruction, memory::{linker::LinkerTask, Memory},
};
fn ser(s: &str, cfg: &Config, linker_tasks: &mut Vec<LinkerTask>) -> u32 {
    Instruction::parse(s, cfg)
        .expect(s)
        .serialize(cfg, 0, linker_tasks)
}
fn bits(s: &str) -> u32 {
    let mut charcount = 0;
    let mut int = 0;
    for ch in s.chars() {
        if ch != '0' && ch != '1' {
            continue;
        }
        int *= 2;
        charcount += 1;
        if ch == '1' {
            int += 1;
        }
    }
    if charcount != 32 {
        panic!("String not 32 bits, {} is {} bits", s, charcount);
    }
    int
}
#[rustfmt::skip]
const SIMPLE_TESTS: &[(&'static str, &'static str)] = &[
    ("010001-10000-00000-01100-01011-000101", "abs.s $11, $12"),
    ("010001-10001-00000-01100-01011-000101", "abs.d $11, $12"),
    ("010001-10110-00000-01100-01011-000101", "abs.ps $11, $12"),
    ("000000-01100-01101-01011-00000-100000", "add $11, $12, $13"),
    ("001000-01100-01011-0111111111111111", "addi $11, $12, 0x7FFF"),
    ("001000-01100-01011-0000000000000000", "addi $11, $12, 0"),
    ("001000-01100-01011-1111111111111111", "addi $11, $12, -1"),
    ("001001-01100-01011-1111111111111111", "addiu $11, $12, 0xFFFF"),
    ("001001-01100-01011-0000000000000000", "addiu $11, $12, 0"),
    ("000000-01100-01101-01011-00000-100001", "addu $11, $12, $13"),
    ("111011-01100-00-0111111111111111111", "addiupc $12, 0x3FFFF"),
    ("111011-01100-00-1111111111111111111", "addiupc $12, -1"),
    ("111011-01100-00-1000000000000000000", "addiupc $12, -0x40000"),
    ("111011-01100-00-0000000000000000000", "addiupc $12, 0"),
    ("010001-10000-01101-01100-01011-000000", "add.s $11, $12, $13"),
    ("010001-10001-01101-01100-01011-000000", "add.d $11, $12, $13"),
    ("010001-10110-01101-01100-01011-000000", "add.ps $11, $12, $13"),
    ("011111-01100-01101-01011-010-00-100000", "align $11, $12, $13, 0"),
    ("011111-01100-01101-01011-010-11-100000", "align $11, $12, $13, 3"),
    ("000000-01100-01101-01011-00000-100100","and $11, $12, $13"),
    ("111011-01011-11111-0000000000000000","aluipc $11, 0"),
    ("111011-01011-11111-1111111111111111","aluipc $11, 0xFFFF"),
    ("010011-01110-01101-01100-01011-011110","alnv.ps $11, $12, $13, $14"),
    ("001100-01100-01011-0000000000000000","andi $11, $12, 0"),
    ("001100-01100-01011-1111111111111111","andi $11, $12, 0xFFFF"),
    ("001100-01100-01011-0000000011111111","andi $11, $12, 0x00FF"),
    ("001111-01100-01011-0000000000000000","aui $11, $12, 0"),
    ("001111-01100-01011-0111111111111111","aui $11, $12, 0x7FFF"),
    ("001111-01100-01011-1000000000000000","aui $11, $12, -0x8000"),
    ("111011-01100-11110-0000000000000000","auipc $12, 0"),
    ("111011-01100-11110-1000000000000000","auipc $12, -0x8000"),
    ("111011-01100-11110-0111111111111111","auipc $12, 0x7FFF"),
    ("000100-00000-00000-0000000000000001","b 1"),
    ("000100-00000-00000-1000000000000000","b -0x8000"),
    ("000100-00000-00000-0111111111111111","b 0x7FFF"),
    ("000001-00000-10001-0000000000000000","bal 0"),
    ("000001-00000-10001-1000000000000000","bal -0x8000"),
    ("000001-00000-10001-0111111111111111","bal 0x7FFF"),
    ("111010-00000000000000000000000000","balc 0"),
    ("111010-11111111111111111111111111","balc 0x3FFFFFF"),
    ("110010-00000000000000000000000000","bc 0"),
    ("110010-10000000000000000000000000","bc -0x2000000"),
    ("110010-01111111111111111111111111","bc 0x1FFFFFF"),
    ("010001-01001-01011-0000000000000000","bc1eqz $f11, 0"),
    ("010001-01001-01011-1000000000000000","bc1eqz $f11, -0x8000"),
    ("010001-01001-01011-0111111111111111","bc1eqz $f11, 0x7FFF"),
    ("010001-01101-01011-0000000000000000","bc1nez $f11, 0"),
    ("010001-01101-01011-1000000000000000","bc1nez $f11, -0x8000"),
    ("010001-01101-01011-0111111111111111","bc1nez $f11, 0x7FFF"),
    ("010001-01000-000-0-0-0000000000000000","bc1f 0"),
    ("010001-01000-111-0-0-0000000000000000","bc1f 7, 0"),
    ("010001-01000-000-0-0-0111111111111111","bc1f 0x7FFF"),
    ("010001-01000-111-0-0-1000000000000000","bc1f 7, -0x8000"),
    ("010001-01000-000-0-1-0000000000000000","bc1t 0"),
    ("010001-01000-111-0-1-0000000000000000","bc1t 7, 0"),
    ("010001-01000-000-0-1-0111111111111111","bc1t 0x7FFF"),
    ("010001-01000-111-0-1-1000000000000000","bc1t 7, -0x8000"),
    ("010001-01000-000-1-0-0000000000000000","bc1fl 0"),
    ("010001-01000-111-1-0-0000000000000000","bc1fl 7, 0"),
    ("010001-01000-000-1-0-0111111111111111","bc1fl 0x7FFF"),
    ("010001-01000-111-1-0-1000000000000000","bc1fl 7, -0x8000"),
    ("010001-01000-000-1-1-0000000000000000","bc1tl 0"),
    ("010001-01000-111-1-1-0000000000000000","bc1tl 7, 0"),
    ("010001-01000-000-1-1-0111111111111111","bc1tl 0x7FFF"),
    ("010001-01000-111-1-1-1000000000000000","bc1tl 7, -0x8000"),
    ("010010-01001-01011-0000000000000000","bc2eqz $11, 0"),
    ("010010-01001-01011-1000000000000000","bc2eqz $11, -0x8000"),
    ("010010-01001-01011-0111111111111111","bc2eqz $11, 0x7FFF"),
    ("010010-01101-01011-0000000000000000","bc2nez $11, 0"),
    ("010010-01101-01011-1000000000000000","bc2nez $11, -0x8000"),
    ("010010-01101-01011-0111111111111111","bc2nez $11, 0x7FFF"),
    ("010010-01000-000-0-0-0000000000000000","bc2f 0"),
    ("010010-01000-111-0-0-0000000000000000","bc2f 7, 0"),
    ("010010-01000-000-0-0-0111111111111111","bc2f 0x7FFF"),
    ("010010-01000-111-0-0-1000000000000000","bc2f 7, -0x8000"),
    ("010010-01000-000-0-1-0000000000000000","bc2t 0"),
    ("010010-01000-111-0-1-0000000000000000","bc2t 7, 0"),
    ("010010-01000-000-0-1-0111111111111111","bc2t 0x7FFF"),
    ("010010-01000-111-0-1-1000000000000000","bc2t 7, -0x8000"),
    ("010010-01000-000-1-0-0000000000000000","bc2fl 0"),
    ("010010-01000-111-1-0-0000000000000000","bc2fl 7, 0"),
    ("010010-01000-000-1-0-0111111111111111","bc2fl 0x7FFF"),
    ("010010-01000-111-1-0-1000000000000000","bc2fl 7, -0x8000"),
    ("010010-01000-000-1-1-0000000000000000","bc2tl 0"),
    ("010010-01000-111-1-1-0000000000000000","bc2tl 7, 0"),
    ("010010-01000-000-1-1-0111111111111111","bc2tl 0x7FFF"),
    ("010010-01000-111-1-1-1000000000000000","bc2tl 7, -0x8000"),
    ("000100-01011-01100-0000000000000000","beq $11, $12, 0"),
    ("000100-01011-01100-1000000000000000","beq $11, $12, -0x8000"),
    ("000100-01011-01100-0111111111111111","beq $11, $12, 0x7FFF"),
    ("010100-01011-01100-0000000000000000","beql $11, $12, 0"),
    ("010100-01011-01100-1000000000000000","beql $11, $12, -0x8000"),
    ("010100-01011-01100-0111111111111111","beql $11, $12, 0x7FFF"),
    ("000001-01011-00001-0000000000000000","bgez $11, 0"),
    ("000001-01011-00001-1000000000000000","bgez $11, -0x8000"),
    ("000001-01011-00001-0111111111111111","bgez $11, 0x7FFF"),
    ("000001-01011-10001-0000000000000000","bgezal $11, 0"),
    ("000001-01011-10001-1000000000000000","bgezal $11, -0x8000"),
    ("000001-01011-10001-0111111111111111","bgezal $11, 0x7FFF"),
    ("000110-00000-01011-0000000000000000","blezalc $11, 0"),
    ("000110-00000-01011-1000000000000000","blezalc $11, -0x8000"),
    ("000110-00000-01011-0111111111111111","blezalc $11, 0x7FFF"),
    ("000110-01011-01011-0000000000000000","bgezalc $11, 0"),
    ("000110-01011-01011-1000000000000000","bgezalc $11, -0x8000"),
    ("000110-01011-01011-0111111111111111","bgezalc $11, 0x7FFF"),
    ("000111-00000-01011-0000000000000000","bgtzalc $11, 0"),
    ("000111-00000-01011-1000000000000000","bgtzalc $11, -0x8000"),
    ("000111-00000-01011-0111111111111111","bgtzalc $11, 0x7FFF"),
    ("000111-01011-01011-0000000000000000","bltzalc $11, 0"),
    ("000111-01011-01011-1000000000000000","bltzalc $11, -0x8000"),
    ("000111-01011-01011-0111111111111111","bltzalc $11, 0x7FFF"),
    ("001000-00000-01011-0000000000000000","beqzalc $11, 0"),
    ("001000-00000-01011-1000000000000000","beqzalc $11, -0x8000"),
    ("001000-00000-01011-0111111111111111","beqzalc $11, 0x7FFF"),
    ("011000-00000-01011-0000000000000000","bnezalc $11, 0"),
    ("011000-00000-01011-1000000000000000","bnezalc $11, -0x8000"),
    ("011000-00000-01011-0111111111111111","bnezalc $11, 0x7FFF"),
    ("000001-01011-10011-0000000000000000","bgezall $11, 0"),
    ("000001-01011-10011-1000000000000000","bgezall $11, -0x8000"),
    ("000001-01011-10011-0111111111111111","bgezall $11, 0x7FFF"),
    ("000001-01011-00011-0000000000000000","bgezl $11, 0"),
    ("000001-01011-00011-1000000000000000","bgezl $11, -0x8000"),
    ("000001-01011-00011-0111111111111111","bgezl $11, 0x7FFF"),
    ("000111-01011-00000-0000000000000000","bgtz $11, 0"),
    ("000111-01011-00000-1000000000000000","bgtz $11, -0x8000"),
    ("000111-01011-00000-0111111111111111","bgtz $11, 0x7FFF"),
    ("010111-01011-00000-0000000000000000","bgtzl $11, 0"),
    ("010111-01011-00000-1000000000000000","bgtzl $11, -0x8000"),
    ("010111-01011-00000-0111111111111111","bgtzl $11, 0x7FFF"),
    ("000110-01011-00000-0000000000000000","blez $11, 0"),
    ("000110-01011-00000-1000000000000000","blez $11, -0x8000"),
    ("000110-01011-00000-0111111111111111","blez $11, 0x7FFF"),
    ("010110-01011-00000-0000000000000000","blezl $11, 0"),
    ("010110-01011-00000-1000000000000000","blezl $11, -0x8000"),
    ("010110-01011-00000-0111111111111111","blezl $11, 0x7FFF"),
    ("000001-01011-00000-0000000000000000","bltz $11, 0"),
    ("000001-01011-00000-1000000000000000","bltz $11, -0x8000"),
    ("000001-01011-00000-0111111111111111","bltz $11, 0x7FFF"),
    ("000001-01011-10000-0000000000000000","bltzal $11, 0"),
    ("000001-01011-10000-1000000000000000","bltzal $11, -0x8000"),
    ("000001-01011-10000-0111111111111111","bltzal $11, 0x7FFF"),
    ("000001-01011-10010-0000000000000000","bltzall $11, 0"),
    ("000001-01011-10010-1000000000000000","bltzall $11, -0x8000"),
    ("000001-01011-10010-0111111111111111","bltzall $11, 0x7FFF"),
    ("000001-01011-00010-0000000000000000","bltzl $11, 0"),
    ("000001-01011-00010-1000000000000000","bltzl $11, -0x8000"),
    ("000001-01011-00010-0111111111111111","bltzl $11, 0x7FFF"),
    ("000101-01011-01100-0000000000000000","bne $11, $12, 0"),
    ("000101-01011-01100-1000000000000000","bne $11, $12, -0x8000"),
    ("000101-01011-01100-0111111111111111","bne $11, $12, 0x7FFF"),
    ("010101-01011-01100-0000000000000000","bnel $11, $12, 0"),
    ("010101-01011-01100-1000000000000000","bnel $11, $12, -0x8000"),
    ("010101-01011-01100-0111111111111111","bnel $11, $12, 0x7FFF"),
    ("010110-00000-01011-0000000000000000","blezc $11, 0"),
    ("010110-00000-01011-1000000000000000","blezc $11, -0x8000"),
    ("010110-00000-01011-0111111111111111","blezc $11, 0x7FFF"),
    ("010110-01011-01011-0000000000000000","bgezc $11, 0"),
    ("010110-01011-01011-1000000000000000","bgezc $11, -0x8000"),
    ("010110-01011-01011-0111111111111111","bgezc $11, 0x7FFF"),
    ("010110-01100-01011-0000000000000000","bgec $12, $11, 0"),
    ("010110-01100-01011-1000000000000000","bgec $12, $11, -0x8000"),
    ("010110-01100-01011-0111111111111111","bgec $12, $11, 0x7FFF"),
    ("010110-01100-01011-0000000000000000","blec $11, $12, 0"),
    ("010110-01100-01011-1000000000000000","blec $11, $12, -0x8000"),
    ("010110-01100-01011-0111111111111111","blec $11, $12, 0x7FFF"),
    ("010111-00000-01011-0000000000000000","bgtzc $11, 0"),
    ("010111-00000-01011-1000000000000000","bgtzc $11, -0x8000"),
    ("010111-00000-01011-0111111111111111","bgtzc $11, 0x7FFF"),
    ("010111-01011-01011-0000000000000000","bltzc $11, 0"),
    ("010111-01011-01011-1000000000000000","bltzc $11, -0x8000"),
    ("010111-01011-01011-0111111111111111","bltzc $11, 0x7FFF"),
    ("010111-01100-01011-0000000000000000","bltc $12, $11, 0"),
    ("010111-01100-01011-1000000000000000","bltc $12, $11, -0x8000"),
    ("010111-01100-01011-0111111111111111","bltc $12, $11, 0x7FFF"),
    ("010111-01100-01011-0000000000000000","bgtc $11, $12, 0"),
    ("010111-01100-01011-1000000000000000","bgtc $11, $12, -0x8000"),
    ("010111-01100-01011-0111111111111111","bgtc $11, $12, 0x7FFF"),
    ("000110-01100-01011-0000000000000000","bgeuc $12, $11, 0"),
    ("000110-01100-01011-1000000000000000","bgeuc $12, $11, -0x8000"),
    ("000110-01100-01011-0111111111111111","bgeuc $12, $11, 0x7FFF"),
    ("000110-01100-01011-0000000000000000","bleuc $11, $12, 0"),
    ("000110-01100-01011-1000000000000000","bleuc $11, $12, -0x8000"),
    ("000110-01100-01011-0111111111111111","bleuc $11, $12, 0x7FFF"),
    ("000111-01100-01011-0000000000000000","bltuc $12, $11, 0"),
    ("000111-01100-01011-1000000000000000","bltuc $12, $11, -0x8000"),
    ("000111-01100-01011-0111111111111111","bltuc $12, $11, 0x7FFF"),
    ("000111-01100-01011-0000000000000000","bgtuc $11, $12, 0"),
    ("000111-01100-01011-1000000000000000","bgtuc $11, $12, -0x8000"),
    ("000111-01100-01011-0111111111111111","bgtuc $11, $12, 0x7FFF"),
    ("001000-01011-01100-0000000000000000","beqc $12, $11, 0"),
    ("001000-01011-01100-1000000000000000","beqc $12, $11, -0x8000"),
    ("001000-01011-01100-0111111111111111","beqc $12, $11, 0x7FFF"),
    ("001000-01011-01100-0000000000000000","beqc $11, $12, 0"),
    ("001000-01011-01100-1000000000000000","beqc $11, $12, -0x8000"),
    ("001000-01011-01100-0111111111111111","beqc $11, $12, 0x7FFF"),
    ("011000-01011-01100-0000000000000000","bnec $12, $11, 0"),
    ("011000-01011-01100-1000000000000000","bnec $12, $11, -0x8000"),
    ("011000-01011-01100-0111111111111111","bnec $12, $11, 0x7FFF"),
    ("011000-01011-01100-0000000000000000","bnec $11, $12, 0"),
    ("011000-01011-01100-1000000000000000","bnec $11, $12, -0x8000"),
    ("011000-01011-01100-0111111111111111","bnec $11, $12, 0x7FFF"),
    ("110110-01011-000000000000000000000","beqzc $11, 0"),
    ("110110-01011-100000000000000000000","beqzc $11, -0x100000"),
    ("110110-01011-011111111111111111111","beqzc $11, 0xFFFFF"),
    ("111110-01011-000000000000000000000","bnezc $11, 0"),
    ("111110-01011-100000000000000000000","bnezc $11, -0x100000"),
    ("111110-01011-011111111111111111111","bnezc $11, 0xFFFFF"),
    ("011111-00000-01011-01100-00000-100000","bitswap $12, $11"),
    ("001000-01100-01011-0000000000000000","bovc $12, $11, 0"),
    ("001000-01100-01011-1000000000000000","bovc $12, $11, -0x8000"),
    ("001000-01100-01011-0111111111111111","bovc $12, $11, 0x7FFF"),
    ("001000-01100-01011-0000000000000000","bovc $11, $12, 0"),
    ("001000-01100-01011-1000000000000000","bovc $11, $12, -0x8000"),
    ("001000-01100-01011-0111111111111111","bovc $11, $12, 0x7FFF"),
    ("011000-01100-01011-0000000000000000","bnvc $12, $11, 0"),
    ("011000-01100-01011-1000000000000000","bnvc $12, $11, -0x8000"),
    ("011000-01100-01011-0111111111111111","bnvc $12, $11, 0x7FFF"),
    ("011000-01100-01011-0000000000000000","bnvc $11, $12, 0"),
    ("011000-01100-01011-1000000000000000","bnvc $11, $12, -0x8000"),
    ("011000-01100-01011-0111111111111111","bnvc $11, $12, 0x7FFF"),
    ("000000-00000000000000000000-001101","break"),
    ("101111-01011-11111-0000000000000000","cache 31, 0($11)"),
    ("101111-01011-11111-0111111111111111","cache 31, 0x7FFF($11)"),
    ("101111-01011-11111-1000000000000000","cache 31, -0x8000($11)"),
    ("010001-10000-00000-01011-01100-001010","ceil.l.s $f12, $f11"),
    ("010001-10001-00000-01011-01100-001010","ceil.l.d $f12, $f11"),
    ("010001-10000-00000-01011-01100-001110","ceil.w.s $f12, $f11"),
    ("010001-10001-00000-01011-01100-001110","ceil.w.d $f12, $f11"),
    ("010001-00010-01011-01100-00000000000","cfc1 $11, $f12"),
    ("010001-10000-00000-01011-01100-011011","class.s $f12, $f11"),
    ("010001-10001-00000-01011-01100-011011","class.d $f12, $f11"),
    ("011100-01100-01011-01011-00000-100001","clo $11, $12"),
    ("011100-01100-01011-01011-00000-100000","clz $11, $12"),
    ("011111-01100-01011-00000-000-00-001111","crc32b $11, $12, $11"),
    ("011111-01100-01011-00000-000-01-001111","crc32h $11, $12, $11"),
    ("011111-01100-01011-00000-000-10-001111","crc32w $11, $12, $11"),
    ("011111-01100-01011-00000-001-00-001111","crc32cb $11, $12, $11"),
    ("011111-01100-01011-00000-001-01-001111","crc32ch $11, $12, $11"),
    ("011111-01100-01011-00000-001-10-001111","crc32cw $11, $12, $11"),
    ("010001-00110-01011-01100-00000000000","ctc1 $11, $f12"),
    ("010001-10000-00000-01100-01011-100001","cvt.d.s $f11, $f12"),
    ("010001-10100-00000-01100-01011-100001","cvt.d.w $f11, $f12"),
    ("010001-10101-00000-01100-01011-100001","cvt.d.l $f11, $f12"),
    ("010001-10000-00000-01100-01011-100101","cvt.l.s $f11, $f12"),
    ("010001-10001-00000-01100-01011-100101","cvt.l.d $f11, $f12"),
    ("010001-10000-01101-01100-01011-100110","cvt.ps.s $11, $12, $13"),
    ("010001-10110-00000-01100-01011-101000","cvt.s.pl $11, $12"),
    ("010001-10110-00000-01100-01011-100000","cvt.s.pu $11, $12"),
    ("010001-10001-00000-01100-01011-100000","cvt.s.d $f11, $f12"),
    ("010001-10100-00000-01100-01011-100000","cvt.s.w $f11, $f12"),
    ("010001-10101-00000-01100-01011-100000","cvt.s.l $f11, $f12"),
    ("010001-10000-00000-01100-01011-100100","cvt.w.s $f11, $f12"),
    ("010001-10001-00000-01100-01011-100100","cvt.w.d $f11, $f12"),
    ("010000-1-0000000000000000000-011111","deret"),
    ("010000-01011-01101-01100-00000-0-00-000","di $13"),
    ("000000-01011-01100-0000000000-011010", "div $11, $12"),
    ("000000-01011-01100-0000000000-011011", "divu $11, $12"),
    ("010001-10000-01101-01100-01011-000011","div.s $f11, $f12, $f13"),
    ("010001-10001-01101-01100-01011-000011","div.d $f11, $f12, $f13"),
    ("010000-01011-01100-00000-00000-1-00-100","dvp $12"),
    ("000000-00000-00000-00000-00011-000000","ehb"),
    ("010000-01011-01101-01100-00000-1-00-000","ei $13"),
    ("010000-1-0000000000000000000-011000","eret"),
    ("010000-1-000000000000000000-1-011000","eretnc"),
    ("010000-01011-01100-00000-00000-0-00-100","evp $12"),
    ("011111-01100-01011-00000-00000-000000","ext $11, $12, 0, 1"),
    ("011111-01100-01011-11111-00000-000000","ext $11, $12, 0, 32"),
    ("011111-01100-01011-00000-11111-000000","ext $11, $12, 31, 1"),
    ("010001-10000-00000-01011-01100-001011","floor.l.s $f12, $f11"),
    ("010001-10001-00000-01011-01100-001011","floor.l.d $f12, $f11"),
    ("010001-10000-00000-01011-01100-001111","floor.w.s $f12, $f11"),
    ("010001-10001-00000-01011-01100-001111","floor.w.d $f12, $f11"),
    ("011111-01100-0000000000000-00-111101","ginvi $12"),
    ("011111-01100-00000-000000-00-10-111101","ginvt $12, 0"),
    ("011111-01100-00000-000000-11-10-111101","ginvt $12, 3"),
    ("011111-01100-01011-00000-00000-000100","ins $11, $12, 0, 1"),
    ("011111-01100-01011-11111-11111-000100","ins $11, $12, 31, 1"),
    ("011111-01100-01011-11111-00000-000100","ins $11, $12, 0, 32"),
    ("000010-00000000000000000000000000","j 0"),
    ("000010-11111111111111111111111111","j 0x3FFFFFF"),
    ("000011-00000000000000000000000000","jal 0"),
    ("000011-11111111111111111111111111","jal 0x3FFFFFF"),
    ("000000-01011-00000-11111-00000-001001","jalr $11"),
    ("000000-01011-00000-01100-00000-001001","jalr $12, $11"),
    ("000000-01011-00000-11111-10000-001001","jalr.hb $11"),
    ("000000-01011-00000-01100-10000-001001","jalr.hb $12, $11"),
    ("011101-00000000000000000000000000","jalx 0"),
    ("011101-11111111111111111111111111","jalx 0x3FFFFFF"),
    ("111110-00000-01100-0000000000000000","jialc $12, 0"),
    ("111110-00000-01100-1000000000000000","jialc $12, -0x8000"),
    ("111110-00000-01100-0111111111111111","jialc $12, 0x7FFF"),
    ("110110-00000-01100-0000000000000000","jic $12, 0"),
    ("110110-00000-01100-1000000000000000","jic $12, -0x8000"),
    ("110110-00000-01100-0111111111111111","jic $12, 0x7FFF"),
    ("000000-01100-0000000000-00000-001000","jr $12"),
    ("000000-01100-0000000000-10000-001000","jr.hb $12"),
    ("100000-01100-01011-0000000000000000","lb $11, 0($12)"),
    ("100000-01100-01011-1000000000000000","lb $11, -0x8000($12)"),
    ("100000-01100-01011-0111111111111111","lb $11, 0x7FFF($12)"),
    ("100100-01100-01011-0000000000000000","lbu $11, 0($12)"),
    ("100100-01100-01011-1000000000000000","lbu $11, -0x8000($12)"),
    ("100100-01100-01011-0111111111111111","lbu $11, 0x7FFF($12)"),
    ("110101-01100-01011-0000000000000000","ldc1 $f11, 0($12)"),
    ("110101-01100-01011-0111111111111111","ldc1 $f11, 0x7FFF($12)"),
    ("110101-01100-01011-1000000000000000","ldc1 $f11, -0x8000($12)"),
    ("110110-01100-01011-0000000000000000","ldc2 $11, 0($12)"),
    ("110110-01100-01011-0111111111111111","ldc2 $11, 0x7FFF($12)"),
    ("110110-01100-01011-1000000000000000","ldc2 $11, -0x8000($12)"),
    ("010011-01100-01101-00000-01011-000001","ldxc1 $11, $13($12)"),
    ("100001-01100-01011-0000000000000000","lh $11, 0($12)"),
    ("100001-01100-01011-1000000000000000","lh $11, -0x8000($12)"),
    ("100001-01100-01011-0111111111111111","lh $11, 0x7FFF($12)"),
    ("100101-01100-01011-0000000000000000","lhu $11, 0($12)"),
    ("100101-01100-01011-1000000000000000","lhu $11, -0x8000($12)"),
    ("100101-01100-01011-0111111111111111","lhu $11, 0x7FFF($12)"),
    ("110000-01100-01011-0000000000000000","ll $11, 0($12)"),
    ("110000-01100-01011-0111111111111111","ll $11, 0x7FFF($12)"),
    ("110000-01100-01011-1000000000000000","ll $11, -0x8000($12)"),
    ("011111-01101-01011-01100-00001-110110","llwp $11, $12, ($13)"),
    ("000000-01100-01101-01011-000-00-000101", "lsa $11, $12, $13, 0"),
    ("000000-01100-01101-01011-000-11-000101", "lsa $11, $12, $13, 3"),
    ("001111-00000-01011-0000000000000000","lui $11, 0"),
    ("001111-00000-01011-1000000000000000","lui $11, -0x8000"),
    ("001111-00000-01011-0111111111111111","lui $11, 0x7FFF"),
    ("010011-01100-01101-00000-01011-000101","luxc1 $11, $13($12)"),
    ("100011-01100-01011-0000000000000000","lw $11, 0($12)"),
    ("100011-01100-01011-1000000000000000","lw $11, -0x8000($12)"),
    ("100011-01100-01011-0111111111111111","lw $11, 0x7FFF($12)"),
    ("110001-01100-01011-0000000000000000","lwc1 $f11, 0($12)"),
    ("110001-01100-01011-0111111111111111","lwc1 $f11, 0x7FFF($12)"),
    ("110001-01100-01011-1000000000000000","lwc1 $f11, -0x8000($12)"),
    ("110010-01100-01011-0000000000000000","lwc2 $11, 0($12)"),
    ("110010-01100-01011-0111111111111111","lwc2 $11, 0x7FFF($12)"),
    ("110010-01100-01011-1000000000000000","lwc2 $11, -0x8000($12)"),
    ("100010-01100-01011-0000000000000000","lwl $11, 0($12)"),
    ("100010-01100-01011-0111111111111111","lwl $11, 0x7FFF($12)"),
    ("100010-01100-01011-1000000000000000","lwl $11, -0x8000($12)"),
    ("100110-01100-01011-0000000000000000","lwr $11, 0($12)"),
    ("100110-01100-01011-0111111111111111","lwr $11, 0x7FFF($12)"),
    ("100110-01100-01011-1000000000000000","lwr $11, -0x8000($12)"),
    ("111011-01011-01-0000000000000000000","lwpc $11, 0"),
    ("111011-01011-01-1000000000000000000","lwpc $11, -0x40000"),
    ("111011-01011-01-0111111111111111111","lwpc $11, 0x3FFFF"),
    ("010011-01100-01101-00000-01011-000000","lwxc1 $11, $13($12)"),
    ("011100-01011-01100-00000-00000-000000","madd $11, $12"),
    ("011100-01011-01100-00000-00000-000001","maddu $11, $12"),
    ("010011-01011-01101-01100-01010-100-000","madd.s $10, $11, $12, $13"),
    ("010011-01011-01101-01100-01010-100-001","madd.d $10, $11, $12, $13"),
    ("010011-01011-01101-01100-01010-100-110","madd.ps $10, $11, $12, $13"),
    ("010001-10000-01101-01100-01011-011000","maddf.s $11, $12, $13"),
    ("010001-10001-01101-01100-01011-011000","maddf.d $11, $12, $13"),
    ("010001-10000-01101-01100-01011-011001","msubf.s $11, $12, $13"),
    ("010001-10001-01101-01100-01011-011001","msubf.d $11, $12, $13"),
    ("010001-10000-01101-01100-01011-011110","max.s $11, $12, $13"),
    ("010001-10001-01101-01100-01011-011110","max.d $11, $12, $13"),
    ("010001-10000-01101-01100-01011-011111","maxa.s $11, $12, $13"),
    ("010001-10001-01101-01100-01011-011111","maxa.d $11, $12, $13"),
    ("010001-10000-01101-01100-01011-011100","min.s $11, $12, $13"),
    ("010001-10001-01101-01100-01011-011100","min.d $11, $12, $13"),
    ("010001-10000-01101-01100-01011-011101","mina.s $11, $12, $13"),
    ("010001-10001-01101-01100-01011-011101","mina.d $11, $12, $13"),
    ("010000-00000-01011-01100-00000000-000","mfc0 $11, $12"),
    ("010000-00000-01011-01100-00000000-000","mfc0 $11, $12, 0"),
    ("010000-00000-01011-01100-00000000-111","mfc0 $11, $12, 7"),
    ("010001-00000-01011-01100-00000000000","mfc1 $11, $f12"),
    ("010000-00010-01011-01100-00000000-000","mfhc0 $11, $12"),
    ("010000-00010-01011-01100-00000000-000","mfhc0 $11, $12, 0"),
    ("010000-00010-01011-01100-00000000-111","mfhc0 $11, $12, 7"),
    ("010001-00011-01011-01100-00000000000","mfhc1 $11, $f12"),
    ("000000-0000000000-01011-00000-010000","mfhi $11"),
    ("000000-0000000000-01011-00000-010010","mflo $11"),
    ("010001-10000-00000-01100-01011-000110","mov.s $11, $12"),
    ("010001-10001-00000-01100-01011-000110","mov.d $11, $12"),
    ("010001-10110-00000-01100-01011-000110","mov.ps $11, $12"),
    ("000000-01100-000-0-0-01011-00000-000001","movf $11, $12, 0"),
    ("000000-01100-111-0-0-01011-00000-000001","movf $11, $12, 7"),
    ("010001-10000-000-0-0-01100-01011-010001","movf.s $11, $12, 0"),
    ("010001-10000-111-0-0-01100-01011-010001","movf.s $11, $12, 7"),
    ("010001-10001-000-0-0-01100-01011-010001","movf.d $11, $12, 0"),
    ("010001-10001-111-0-0-01100-01011-010001","movf.d $11, $12, 7"),
    ("010001-10110-000-0-0-01100-01011-010001","movf.ps $11, $12, 0"),
    ("010001-10110-111-0-0-01100-01011-010001","movf.ps $11, $12, 7"),
    ("000000-01100-000-0-1-01011-00000-000001","movt $11, $12, 0"),
    ("000000-01100-111-0-1-01011-00000-000001","movt $11, $12, 7"),
    ("010001-10000-000-0-1-01100-01011-010001","movt.s $11, $12, 0"),
    ("010001-10000-111-0-1-01100-01011-010001","movt.s $11, $12, 7"),
    ("010001-10001-000-0-1-01100-01011-010001","movt.d $11, $12, 0"),
    ("010001-10001-111-0-1-01100-01011-010001","movt.d $11, $12, 7"),
    ("010001-10110-000-0-1-01100-01011-010001","movt.ps $11, $12, 0"),
    ("010001-10110-111-0-1-01100-01011-010001","movt.ps $11, $12, 7"),
    ("000000-01100-01101-01011-00000-001011","movn $11, $12, $13"),
    ("010001-10000-01100-01101-01011-010011","movn.s $11, $13, $12"),
    ("010001-10001-01100-01101-01011-010011","movn.d $11, $13, $12"),
    ("010001-10110-01100-01101-01011-010011","movn.ps $11, $13, $12"),
    ("000000-01100-01101-01011-00000-001010","movz $11, $12, $13"),
    ("010001-10000-01100-01101-01011-010010","movz.s $11, $13, $12"),
    ("010001-10001-01100-01101-01011-010010","movz.d $11, $13, $12"),
    ("010001-10110-01100-01101-01011-010010","movz.ps $11, $13, $12"),
    ("011100-01011-01100-00000-00000-000100","msub $11, $12"),
    ("011100-01011-01100-00000-00000-000101","msubu $11, $12"),
    ("010011-01011-01101-01100-01010-101-000","msub.s $10, $11, $12, $13"),
    ("010011-01011-01101-01100-01010-101-001","msub.d $10, $11, $12, $13"),
    ("010011-01011-01101-01100-01010-101-110","msub.ps $10, $11, $12, $13"),
    ("010000-00100-01011-01100-00000000-000","mtc0 $11, $12"),
    ("010000-00100-01011-01100-00000000-000","mtc0 $11, $12, 0"),
    ("010000-00100-01011-01100-00000000-111","mtc0 $11, $12, 7"),
    ("010001-00100-01011-01100-00000000000","mtc1 $11, $f12"),
    ("010000-00110-01011-01100-00000000-000","mthc0 $11, $12"),
    ("010000-00110-01011-01100-00000000-000","mthc0 $11, $12, 0"),
    ("010000-00110-01011-01100-00000000-111","mthc0 $11, $12, 7"),
    ("010001-00111-01011-01100-00000000000","mthc1 $11, $f12"),
    ("000000-01011-000000000000000-010001","mthi $11"),
    ("000000-01011-000000000000000-010011","mtlo $11"),
    ("010001-10000-01101-01100-01011-000010","mul.s $11, $12, $13"),
    ("010001-10001-01101-01100-01011-000010","mul.d $11, $12, $13"),
    ("010001-10110-01101-01100-01011-000010","mul.ps $11, $12, $13"),
    ("000000-01011-01100-0000000000-011000","mult $11, $12"),
    ("000000-01011-01100-0000000000-011001","multu $11, $12"),
    ("000001-00000-10000-0000000000000000","nal"),
    ("010001-10000-00000-01100-01011-000111","neg.s $11, $12"),
    ("010001-10001-00000-01100-01011-000111","neg.d $11, $12"),
    ("010001-10110-00000-01100-01011-000111","neg.ps $11, $12"),
    ("010011-01011-01101-01100-01010-110-000","nmadd.s $10, $11, $12, $13"),
    ("010011-01011-01101-01100-01010-110-001","nmadd.d $10, $11, $12, $13"),
    ("010011-01011-01101-01100-01010-110-110","nmadd.ps $10, $11, $12, $13"),
    ("010011-01011-01101-01100-01010-111-000","nmsub.s $10, $11, $12, $13"),
    ("010011-01011-01101-01100-01010-111-001","nmsub.d $10, $11, $12, $13"),
    ("010011-01011-01101-01100-01010-111-110","nmsub.ps $10, $11, $12, $13"),
    ("000000-00000-00000-00000-00000-000000","nop"),
    ("000000-01100-01101-01011-00000-100111","nor $11, $12, $13"),
    ("000000-01100-01101-01011-00000-100101","or $11, $12, $13"),
    ("001101-01100-01011-0000000000000000","ori $11, $12, 0"),
    ("001101-01100-01011-1111111111111111","ori $11, $12, 0xFFFF"),
    ("000000-00000-00000-00000-00101-000000","pause"),
    ("010001-10110-01101-01100-01011-101100","pll.ps $11, $12, $13"),
    ("010001-10110-01101-01100-01011-101101","plu.ps $11, $12, $13"),
    ("010001-10110-01101-01100-01011-101110","pul.ps $11, $12, $13"),
    ("010001-10110-01101-01100-01011-101111","puu.ps $11, $12, $13"),
    ("110011-01100-00000-0000000000000000","pref 0, 0($12)"),
    ("110011-01100-11111-0000000000000000","pref 31, 0($12)"),
    ("110011-01100-00000-0111111111111111","pref 0, 0x7FFF($12)"),
    ("110011-01100-00000-1000000000000000","pref 0, -0x8000($12)"),
    ("011111-00000-01100-01101-00-000-111011","rdhwr $12, $13, 0"),
    ("011111-00000-01100-01101-00-111-111011","rdhwr $12, $13, 7"),
    ("010000-01010-01100-01101-00000000000","rdpgpr $13, $12"),
    ("010001-10000-00000-01100-01011-010101","recip.s $11, $12"),
    ("010001-10001-00000-01100-01011-010101","recip.d $11, $12"),
    ("010001-10000-00000-01100-01011-011010","rint.s $11, $12"),
    ("010001-10001-00000-01100-01011-011010","rint.d $11, $12"),
    ("000000-0000-1-01100-01011-00000-000010","rotr $11, $12, 0"),
    ("000000-0000-1-01100-01011-11111-000010","rotr $11, $12, 31"),
    ("000000-01101-01100-01011-0000-1-000110","rotrv $11, $12, $13"),
    ("010001-10000-00000-01011-01100-001000","round.l.s $f12, $f11"),
    ("010001-10001-00000-01011-01100-001000","round.l.d $f12, $f11"),
    ("010001-10000-00000-01011-01100-001100","round.w.s $f12, $f11"),
    ("010001-10001-00000-01011-01100-001100","round.w.d $f12, $f11"),
    ("010001-10000-00000-01011-01100-010110","rsqrt.s $f12, $f11"),
    ("010001-10001-00000-01011-01100-010110","rsqrt.d $f12, $f11"),
    ("101000-01100-01011-0000000000000000","sb $11, 0($12)"),
    ("101000-01100-01011-1000000000000000","sb $11, -0x8000($12)"),
    ("101000-01100-01011-0111111111111111","sb $11, 0x7FFF($12)"),
    ("111000-01100-01011-0000000000000000","sc $11, 0($12)"),
    ("111000-01100-01011-1000000000000000","sc $11, -0x8000($12)"),
    ("111000-01100-01011-0111111111111111","sc $11, 0x7FFF($12)"),
    ("011111-01101-01011-01100-00001-100110","scwp $11, $12, ($13)"),
    ("011100-00000000000000000000-111111","sdbbp 0"),
    ("111101-01100-01011-0000000000000000","sdc1 $f11, 0($12)"),
    ("111101-01100-01011-0111111111111111","sdc1 $f11, 0x7FFF($12)"),
    ("111101-01100-01011-1000000000000000","sdc1 $f11, -0x8000($12)"),
    ("111110-01100-01011-0000000000000000","sdc2 $11, 0($12)"),
    ("111110-01100-01011-0111111111111111","sdc2 $11, 0x7FFF($12)"),
    ("111110-01100-01011-1000000000000000","sdc2 $11, -0x8000($12)"),
    ("010011-01100-01101-01011-00000-001001","sdxc1 $f11, $13($12)"),
    ("011111-00000-01100-01011-10000-100000","seb $11, $12"),
    ("011111-00000-01100-01011-11000-100000","seh $11, $12"),
    ("010001-10000-01101-01100-01011-010000","sel.s $11, $12, $13"),
    ("010001-10001-01101-01100-01011-010000","sel.d $11, $12, $13"),
    ("000000-01100-01101-01011-00000-110101","seleqz $11, $12, $13"),
    ("000000-01100-01101-01011-00000-110111","selnez $11, $12, $13"),
    ("010001-10000-01101-01100-01011-010100","seleqz.s $11, $12, $13"),
    ("010001-10001-01101-01100-01011-010100","seleqz.d $11, $12, $13"),
    ("010001-10000-01101-01100-01011-010111","selnez.s $11, $12, $13"),
    ("010001-10001-01101-01100-01011-010111","selnez.d $11, $12, $13"),
    ("101001-01100-01011-0000000000000000","sh $11, 0($12)"),
    ("101001-01100-01011-1000000000000000","sh $11, -0x8000($12)"),
    ("101001-01100-01011-0111111111111111","sh $11, 0x7FFF($12)"),
    ("000001-00000-10111-0000000000000000","sigrie 0"),
    ("000001-00000-10111-1111111111111111","sigrie 0xFFFF"),
    ("000000-00000-01100-01011-00000-000000","sll $11, $12, 0"),
    ("000000-00000-01100-01011-11111-000000","sll $11, $12, 31"),
    ("000000-01101-01100-01011-00000-000100","sllv $11, $12, $13"),
    ("000000-01100-01101-01011-00000-101010","slt $11, $12, $13"),
    ("001010-01100-01011-0000000000000000","slti $11, $12, 0"),
    ("001010-01100-01011-0111111111111111","slti $11, $12, 0x7FFF"),
    ("001010-01100-01011-1000000000000000","slti $11, $12, -0x8000"),
    ("001011-01100-01011-0000000000000000","sltiu $11, $12, 0"),
    ("001011-01100-01011-1111111111111111","sltiu $11, $12, 0xFFFF"),
    ("000000-01100-01101-01011-00000-101011","sltu $11, $12, $13"),
    ("010001-10000-00000-01100-01011-000100","sqrt.s $11, $12"),
    ("010001-10001-00000-01100-01011-000100","sqrt.d $11, $12"),
    ("000000-00000-01100-01011-00000-000011","sra $11, $12, 0"),
    ("000000-00000-01100-01011-11111-000011","sra $11, $12, 31"),
    ("000000-01101-01100-01011-00000-000111","srav $11, $12, $13"),
    ("000000-00000-01100-01011-00000-000010","srl $11, $12, 0"),
    ("000000-00000-01100-01011-11111-000010","srl $11, $12, 31"),
    ("000000-01101-01100-01011-00000-000110","srlv $11, $12, $13"),
    ("000000-00000-00000-00000-00001-000000","ssnop"),
    ("000000-01100-01101-01011-00000-100010","sub $11, $12, $13"),
    ("000000-01100-01101-01011-00000-100011","subu $11, $12, $13"),
    ("010001-10000-01101-01100-01011-000001", "sub.s $11, $12, $13"),
    ("010001-10001-01101-01100-01011-000001", "sub.d $11, $12, $13"),
    ("010001-10110-01101-01100-01011-000001", "sub.ps $11, $12, $13"),
    ("010011-01100-01101-01011-00000-001101","suxc1 $11, $13($12)"),
    ("101011-01100-01011-0000000000000000","sw $11, 0($12)"),
    ("101011-01100-01011-1000000000000000","sw $11, -0x8000($12)"),
    ("101011-01100-01011-0111111111111111","sw $11, 0x7FFF($12)"),
    ("111001-01100-01011-0000000000000000","swc1 $f11, 0($12)"),
    ("111001-01100-01011-0111111111111111","swc1 $f11, 0x7FFF($12)"),
    ("111001-01100-01011-1000000000000000","swc1 $f11, -0x8000($12)"),
    ("111010-01100-01011-0000000000000000","swc2 $11, 0($12)"),
    ("111010-01100-01011-0111111111111111","swc2 $11, 0x7FFF($12)"),
    ("111010-01100-01011-1000000000000000","swc2 $11, -0x8000($12)"),
    ("101010-01100-01011-0000000000000000","swl $11, 0($12)"),
    ("101010-01100-01011-0111111111111111","swl $11, 0x7FFF($12)"),
    ("101010-01100-01011-1000000000000000","swl $11, -0x8000($12)"),
    ("101110-01100-01011-0000000000000000","swr $11, 0($12)"),
    ("101110-01100-01011-0111111111111111","swr $11, 0x7FFF($12)"),
    ("101110-01100-01011-1000000000000000","swr $11, -0x8000($12)"),
    ("010011-01100-01101-01011-00000-001000","swxc1 $11, $13($12)"),
    ("000000-000000000000000-00000-001111","sync 0"),
    ("000000-000000000000000-11111-001111","sync 31"),
    ("000001-01100-11111-0000000000000000","synci 0($12)"),
    ("000001-01100-11111-0111111111111111","synci 0x7FFF($12)"),
    ("000001-01100-11111-1000000000000000","synci -0x8000($12)"),
    ("000000-00000000000000000000-001100","syscall"),
    ("000000-01011-01100-0000000000-110100","teq $11, $12"),
    ("000001-01101-01100-0000000000000000","teqi $13, 0"),
    ("000001-01101-01100-0111111111111111","teqi $13, 0x7FFF"),
    ("000001-01101-01100-1000000000000000","teqi $13, -0x8000"),
    ("000000-01011-01100-0000000000-110000","tge $11, $12"),
    ("000001-01101-01000-0000000000000000","tgei $13, 0"),
    ("000001-01101-01000-0111111111111111","tgei $13, 0x7FFF"),
    ("000001-01101-01000-1000000000000000","tgei $13, -0x8000"),
    ("000000-01011-01100-0000000000-110001","tgeu $11, $12"),
    ("000001-01101-01001-0000000000000000","tgeiu $13, 0"),
    ("000001-01101-01001-1111111111111111","tgeiu $13, 0xFFFF"),
    ("010000-1-0000000000000000000-000011","tlbinv"),
    ("010000-1-0000000000000000000-000100","tlbinvf"),
    ("010000-1-0000000000000000000-001000","tlbp"),
    ("010000-1-0000000000000000000-000001","tlbr"),
    ("010000-1-0000000000000000000-000010","tlbwi"),
    ("010000-1-0000000000000000000-000110","tlbwr"),
    ("000000-01011-01100-0000000000-110010","tlt $11, $12"),
    ("000001-01101-01010-0000000000000000","tlti $13, 0"),
    ("000001-01101-01010-0111111111111111","tlti $13, 0x7FFF"),
    ("000001-01101-01010-1000000000000000","tlti $13, -0x8000"),
    ("000001-01101-01011-0000000000000000","tltiu $13, 0"),
    ("000001-01101-01011-1111111111111111","tltiu $13, 0xFFFF"),
    ("000000-01011-01100-0000000000-110011","tltu $11, $12"),
    ("000000-01011-01100-0000000000-110110","tne $11, $12"),
    ("000001-01101-01110-0000000000000000","tnei $13, 0"),
    ("000001-01101-01110-0111111111111111","tnei $13, 0x7FFF"),
    ("000001-01101-01110-1000000000000000","tnei $13, -0x8000"),
    ("010001-10000-00000-01011-01100-001001","trunc.l.s $f12, $f11"),
    ("010001-10001-00000-01011-01100-001001","trunc.l.d $f12, $f11"),
    ("010001-10000-00000-01011-01100-001101","trunc.w.s $f12, $f11"),
    ("010001-10001-00000-01011-01100-001101","trunc.w.d $f12, $f11"),
    ("010000-1-0000000000000000000-100000","wait"),
    ("010000-01110-01100-01011-00000000000","wrpgpr $11, $12"),
    ("011111-00000-01100-01011-00010-100000","wsbh $11, $12"),
    ("000000-01100-01101-01011-00000-100110","xor $11, $12, $13"),
    ("001110-01100-01011-0000000000000000","xori $11, $12, 0"),
    ("001110-01100-01011-1111111111111111","xori $11, $12, 0xFFFF"),
];

#[rustfmt::skip]
const SIMPLE_TESTS_R6: &[(&'static str, &'static str)] = &[
    ("011111-01011-11111-000000000-0-100101", "cache 31, 0($11)"),
    ("011111-01011-11111-100000000-0-100101", "cache 31, -0x100($11)"),
    ("011111-01011-11111-011111111-0-100101", "cache 31, 0xFF($11)"),
    ("000000-01100-00000-01011-00001-010001", "clo $11, $12"),
    ("000000-01100-00000-01011-00001-010000", "clz $11, $12"),
    ("000000-01100-01101-01011-00010-011010", "div $11, $12, $13"),
    ("000000-01100-01101-01011-00011-011010", "mod $11, $12, $13"),
    ("000000-01100-01101-01011-00010-011011", "divu $11, $12, $13"),
    ("000000-01100-01101-01011-00011-011011", "modu $11, $12, $13"),
    ("000000-01100-0000000000-10000-001001", "jr.hb $12"),
    ("010010-01110-01011-01100-00000000000", "ldc2 $11, 0($12)"),
    ("010010-01110-01011-01100-01111111111", "ldc2 $11, 0x3FF($12)"),
    ("010010-01110-01011-01100-10000000000", "ldc2 $11, -0x400($12)"),
    ("011111-01100-01011-000000000-0-110110", "ll $11, 0($12)"),
    ("011111-01100-01011-011111111-0-110110", "ll $11, 0xFF($12)"),
    ("011111-01100-01011-100000000-0-110110", "ll $11, -0x100($12)"),
    ("010010-01010-01011-01100-00000000000", "lwc2 $11, 0($12)"),
    ("010010-01010-01011-01100-01111111111", "lwc2 $11, 0x3FF($12)"),
    ("010010-01010-01011-01100-10000000000", "lwc2 $11, -0x400($12)"),
    ("000000-01100-01101-01011-00010-011000", "mul $11, $12, $13"),
    ("000000-01100-01101-01011-00011-011000", "muh $11, $12, $13"),
    ("000000-01100-01101-01011-00010-011001", "mulu $11, $12, $13"),
    ("000000-01100-01101-01011-00011-011001", "muhu $11, $12, $13"),
    ("011111-01100-00000-000000000-0-110101", "pref 0, 0($12)"),
    ("011111-01100-11111-000000000-0-110101", "pref 31, 0($12)"),
    ("011111-01100-11111-011111111-0-110101", "pref 31, 0xFF($12)"),
    ("011111-01100-00000-100000000-0-110101", "pref 0, -0x100($12)"),
    ("010011-01100-01011-00000-00000-001111", "prefx 0, $11($12)"),
    ("010011-01100-01011-11111-00000-001111", "prefx 31, $11($12)"),
    ("011111-01100-01011-000000000-0-100110", "sc $11, 0($12)"),
    ("011111-01100-01011-011111111-0-100110", "sc $11, 0xFF($12)"),
    ("011111-01100-01011-100000000-0-100110", "sc $11, -0x100($12)"),
    ("000000-00000000000000000000-001110", "sdbbp 0"),
    ("010010-01111-01011-01100-00000000000", "sdc2 $11, 0($12)"),
    ("010010-01111-01011-01100-01111111111", "sdc2 $11, 0x3FF($12)"),
    ("010010-01111-01011-01100-10000000000", "sdc2 $11, -0x400($12)"),
    ("010010-01011-01011-01100-00000000000", "swc2 $11, 0($12)"),
    ("010010-01011-01011-01100-01111111111", "swc2 $11, 0x3FF($12)"),
    ("010010-01011-01011-01100-10000000000", "swc2 $11, -0x400($12)"),
];

#[rustfmt::skip]
const PSEUDO_TESTS: &[(&'static str, &[&'static str])] = &[
    ("addi $11, $12, 0x7FFFFFFF",&["lui $1, 0x7FFF","ori $1, $1, 0xFFFF","add $11, $12, $1"]),
    ("addi $11, $12, 0x8000",&["lui $1, 0","ori $1, $1, 0x8000","add $11, $12, $1"]),
    ("addi $11, $12, -0x8001",&["lui $1, 0xFFFF","ori $1, $1, 0x7FFF","add $11, $12, $1"]),
    ("addiu $11, $12, 0xFFFFFFFF",&["lui $1, 0xFFFF","ori $1, $1, 0xFFFF","addu $11, $12, $1"]),
    ("andi $11, $12, 0xFFFFFFFF", &["lui $1, 0xFFFF","ori $1, $1, 0xFFFF","and $11, $12, $1"]),
    ("ori $11, $12, 0x0FFFFFFF", &["lui $1, 0x0FFF","ori $1, $1, 0xFFFF","or $11, $12, $1"]),
    ("slti $11, $12, 0x0FFFFFFF", &["lui $1, 0x0FFF","ori $1, $1, 0xFFFF","slt $11, $12, $1"]),
    ("sltiu $11, $12, 0x7FFFFFFF", &["lui $1, 0x7FFF","ori $1, $1, 0xFFFF","sltu $11, $12, $1"]),
    ("teqi $11, 0x7FFFFFFF", &["lui $1, 0x7FFF","ori $1, $1, 0xFFFF","teq $11, $1"]),
    ("teqi $11, -0x80000000", &["lui $1, 0x8000","ori $1, $1, 0x0","teq $11, $1"]),
    ("tgei $11, 0x7FFFFFFF", &["lui $1, 0x7FFF","ori $1, $1, 0xFFFF","tge $11, $1"]),
    ("tgei $11, -0x80000000", &["lui $1, 0x8000","ori $1, $1, 0x0","tge $11, $1"]),
    ("tgeiu $11, 0x7FFFFFFF", &["lui $1, 0x7FFF","ori $1, $1, 0xFFFF","tgeu $11, $1"]),
    ("tgeiu $11, -0x80000000", &["lui $1, 0x8000","ori $1, $1, 0x0","tgeu $11, $1"]),
    ("xori $11, $12, 0x0FFFFFFF", &["lui $1, 0x0FFF","ori $1, $1, 0xFFFF","xor $11, $12, $1"]),
    ("xori $11, $12, 0xFFFFFFFF", &["lui $1, 0xFFFF","ori $1, $1, 0xFFFF","xor $11, $12, $1"]),
];

#[test]
fn test_serialize() {
    let cfgr5 = Config {
        version: mips_weaver::config::Version::R5,
        ..Default::default()
    };
    let cfgr6 = Config {
        version: mips_weaver::config::Version::R6,
        ..Default::default()
    };
    let mut lt: Vec<LinkerTask> = vec![];
    for test in SIMPLE_TESTS.iter() {
        println!("{}", test.1);
        assert_eq!(
            ser(test.1, &cfgr5, &mut lt),
            bits(test.0),
            "{}",
            test.1
        );
    }
    for test in SIMPLE_TESTS_R6.iter() {
        assert_eq!(
            ser(test.1, &cfgr6, &mut lt),
            bits(test.0),
            "{}",
            test.1
        );
    }
    let mem = Memory::default();
    for test in PSEUDO_TESTS {
        let insts = mem.translate_pseudo_instruction(Instruction::parse(test.0, &cfgr5).expect(test.0), &cfgr5).unwrap();
        let mut other_insts = [Instruction::Nop, Instruction::Nop, Instruction::Nop, Instruction::Nop];
        for (i, pseudo) in test.1.iter().enumerate() {
            other_insts[i] = Instruction::parse(pseudo, &cfgr5).unwrap();
        }
        assert_eq!(insts, other_insts, "{}", test.0);
    }
}
